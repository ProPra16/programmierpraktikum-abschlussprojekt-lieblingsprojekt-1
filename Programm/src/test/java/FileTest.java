import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;

import org.junit.Test;

/*
 * This Java source file was auto generated by running 'gradle init --type java-library'
 * by 'Robert' at '29.06.16 15:34' with Gradle 2.9
 *
 * @author Robert, @date 29.06.16 15:34
 */
public class FileTest {
	// Code Referenz von Jens Bendipito in virtual-kata-lib
	String NameClass = "Bar";
	String NameTest = "BarTest";
	String CodeClass = "public class Bar { \n"
			+ " public static int square(int n) { \n"
			+ "    return n * n; \n"
			+ " }\n"
			+ " public static int plusThree(int n) { \n"
			+ "    return 3 + n; \n"
			+ " }\n"
			+ "}";
	String CodeMain = "import static org.junit.Assert.*;\n"
			+ "import org.junit.Test;\n"
			+ "public class BarTest { \n"
			+ "   @Test\n"
			+ "   public void squareOf4_shouldReturn16() { \n "
			+ "       assertEquals(16, Bar.square(4)); \n"
			+ "   }\n "
			+ "}";
	
	
    @Test 
    public void testgetName() {
    JavaFile testFile = new JavaFile("Wert1", "Wert2");
    assertEquals(testFile.getName(), "Wert1");
    }
    
    @Test 
    public void testgetCode() {
        JavaFile testFile = new JavaFile("Wert1", "Wert2");
        assertEquals(testFile.getCode(), "Wert2");
        }
    
    @Test 
    public void testsetName() {
        JavaFile testFile = new JavaFile("Wert1", "Wert2");
        testFile.setName("TEST");
        assertEquals(testFile.getName(), "TEST");
        }
    
    @Test 
    public void testsetCode() {
        JavaFile testFile = new JavaFile("Wert1", "Wert2");
        testFile.setCode("TEST");
        assertEquals(testFile.getCode(), "TEST");
        }
    
    @Test 
    public void testCompile() {
    	Compilieren compiler = new Compilieren();

    	boolean wert = compiler.starteCompiler(CodeClass, NameTest, CodeMain, NameClass);
		assertTrue(wert);
        }
    
    
}
